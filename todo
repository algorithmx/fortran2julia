TODO list:

(1) type --> mutable struct

(2) use ....

(3) interface

(4) character(...)
example:
[INFO:DECLARE] UNPROCESSED : character(*),      intent(in)    :: keyword
[INFO:DECLARE] UNPROCESSED : character(len=*), intent(in) :: atoms_label_tmp(num_atoms)
[WARNING:write_bare_declare: not private]         #FORTRAN_CONTROL character(len=2), dimension(109) :: periodic_table= (/ 'h ',                                                                                'he', 'li','be',                                                  'b ','c ','n ','o ','f ','ne', 'na','mg', 'al','si','p ','s ','cl','ar', 'k ','ca','sc','ti','v ','cr','mn','fe','co','ni','cu','zn','ga','ge','as','se','br','kr', 'rb','sr','y ','zr','nb','mo','tc','ru','rh','pd','ag','cd','in','sn','sb','te','i ','xe', 'cs','ba', 'la','ce','pr','nd','pm','sm','eu','gd','tb','dy','ho','er','tm','yb','lu', 'hf','ta','w ','re','os','ir','pt','au','hg','tl','pb','bi','po','at','rn', 'fr','ra', 'ac','th','pa','u ','np','pu','am','cm','bk','cf','es','fm','md','no','lr', 'rf','db','sg','bh','hs','mt' /)

(5) intent(in), intent(out)

(6) optional

(7) parameter

(8) WARNING : "write_bare_declare: not private"
example
[WARNING:write_bare_declare: not private]     #FORTRAN_CONTROL real(kind=dp), dimension(3) :: kpt, orig_kpt
[WARNING:write_bare_declare: not private]     #FORTRAN_CONTROL real(kind=dp), parameter :: spacing_threshold = 1.e-3
[WARNING:write_bare_declare: not private] #FORTRAN_CONTROL integer, dimension(3), parameter :: alpha_a=(/ 2,3,1 /)
[WARNING:write_bare_declare: not private] #FORTRAN_CONTROL integer, dimension(3), parameter ::  beta_a=(/ 3,1,2 /)
[WARNING:write_bare_declare: not private] #FORTRAN_CONTROL integer, dimension(6), parameter :: alpha_s=(/ 1,2,3,1,1,2 /)
[WARNING:write_bare_declare: not private] #FORTRAN_CONTROL integer, dimension(6), parameter ::  beta_s=(/ 1,2,3,2,3,3 /)


(9) read

!!! (10) integer function split_string(strin, out) result (n)

(11) 

(12)
[ERROR:write_allocate] KeyError for name = fermi_energy_list in file postw90_common
[ERROR:write_allocate] KeyError for name = kubo_freq_list in file postw90_common
[ERROR:write_allocate] KeyError for name = dos_project in file postw90_common
[ERROR:write_allocate] KeyError for name = eigval in file postw90_common
[ERROR:write_allocate] KeyError for name = kpt_latt in file postw90_common
[ERROR:write_allocate] KeyError for name = nnlist in file postw90_common
[ERROR:write_allocate] KeyError for name = neigh in file postw90_common
[ERROR:write_allocate] KeyError for name = nncell in file postw90_common
[ERROR:write_allocate] KeyError for name = wb in file postw90_common
[ERROR:write_allocate] KeyError for name = bka in file postw90_common
[ERROR:write_allocate] KeyError for name = bk in file postw90_common
[ERROR:write_allocate] KeyError for name = u_matrix in file postw90_common
[ERROR:write_allocate] KeyError for name = m_matrix in file postw90_common
[ERROR:write_allocate] KeyError for name = u_matrix_opt in file postw90_common
[ERROR:write_allocate] KeyError for name = lwindow in file postw90_common
[ERROR:write_allocate] KeyError for name = ndimwin in file postw90_common

(13)
[FAIL:fortran_write_julia()]
[FAIL]  write(stdout,'(//," ****** begin warning ****** ",/)')
[FAIL:fortran_write_julia()]
[FAIL]  write(stdout,'(/," ******  end warning  ****** ",//)')
